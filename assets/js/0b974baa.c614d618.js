"use strict";(self.webpackChunkcotton_box_docs=self.webpackChunkcotton_box_docs||[]).push([[7545],{2928:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>h,default:()=>g,frontMatter:()=>d,metadata:()=>u,toc:()=>p});var o=n(4848),a=n(8453);const i="import { StateManager } from 'cotton-box'\n\n(async function () {\n  let intervalCount = 0\n  const CounterState = new StateManager(0)\n  const intervalRef = setInterval(() => {\n    // Generate random number between 1 to 100\n    const randomNumber = 1 + Math.floor(Math.random() * 100)\n    console.log(`randomNumber: ${randomNumber}`)\n    CounterState.set(randomNumber)\n    intervalCount++\n  }, 1000)\n  const awaitedValue = await CounterState.wait((state) => {\n    return state % 5 === 0\n  })\n  clearInterval(intervalRef)\n  console.log(`Received a number divisible by 5 after ${intervalCount} attempts.`)\n  console.log(`The number is ${awaitedValue}`)\n})()\n",s="import { StateManager } from 'cotton-box'\n\n(async function () {\n  let intervalCount = 0\n  const CounterState = new StateManager(0)\n  const intervalRef = setInterval(() => {\n    // Generate random number between 40 to 50\n    const randomNumber = 40 + Math.round(Math.random() * 10)\n    console.log(`randomNumber: ${randomNumber}`)\n    CounterState.set(randomNumber)\n    intervalCount++\n  }, 1000)\n  await CounterState.wait(42)\n  clearInterval(intervalRef)\n  console.log(`Promise resolved after ${intervalCount} attempts`)\n})()\n";var r=n(6280),l=n(9235),c=n(3439);const d={sidebar_position:4},h="Waiting For State Change",u={id:"learn/tutorial/waiting-for-state-change",title:"Waiting For State Change",description:"Waiting is an observation strategy that utilizes .watch under the hood. It allows us to watch for state value changes until it matches a certain value or fulfils a certain condition then stops watching and returns a snapshot of that state.",source:"@site/docs/learn/tutorial/waiting-for-state-change.mdx",sourceDirName:"learn/tutorial",slug:"/learn/tutorial/waiting-for-state-change",permalink:"/cotton-box/docs/learn/tutorial/waiting-for-state-change",draft:!1,unlisted:!1,editUrl:"https://github.com/glyph-cat/cotton-box/tree/main/packages/docs/docs/learn/tutorial/waiting-for-state-change.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"learnSidebar",previous:{title:"Watching For State Changes",permalink:"/cotton-box/docs/learn/tutorial/watching-for-state-changes"},next:{title:"Disposal",permalink:"/cotton-box/docs/learn/tutorial/disposal"}},m={},p=[{value:"Waiting for a specific value",id:"waiting-for-a-specific-value",level:2},{value:"Waiting for a condition to be fulfilled",id:"waiting-for-a-condition-to-be-fulfilled",level:2}];function f(t){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"waiting-for-state-change",children:"Waiting For State Change"}),"\n",(0,o.jsxs)(e.p,{children:["Waiting is an observation strategy that utilizes ",(0,o.jsx)(e.code,{children:".watch"})," under the hood. It allows us to watch for state value changes until it matches a certain value or fulfils a certain condition then stops watching and returns a snapshot of that state."]}),"\n",(0,o.jsx)(e.p,{children:"Consider the code below, there are two things that we can do with it."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"const CounterState = new StateManager(0)\n\nsetInterval(() => {\n  const randomNumber = Math.round(Math.random() * 100)\n  CounterState.set(randomNumber)\n}, 1000)\n"})}),"\n",(0,o.jsx)(e.h2,{id:"waiting-for-a-specific-value",children:"Waiting for a specific value"}),"\n",(0,o.jsxs)(e.p,{children:["We can pass a value to ",(0,o.jsx)(e.code,{children:".wait"})," and it will resolve when the state matches that value. The state is compared with the expected value using ",(0,o.jsx)(r.L,{href:c.k.API_REFERENCE_URL_OBJECT_IS,children:"Object.is"}),"."]}),"\n",(0,o.jsxs)(e.p,{children:["In this example, the promise will resolve when the state equals to ",(0,o.jsx)(e.code,{children:"42"}),"."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"await CounterState.wait(42)\n"})}),"\n",(0,o.jsx)(l.P3,{code:s}),"\n",(0,o.jsx)(e.h2,{id:"waiting-for-a-condition-to-be-fulfilled",children:"Waiting for a condition to be fulfilled"}),"\n",(0,o.jsxs)(e.p,{children:["We can also pass a callback to ",(0,o.jsx)(e.code,{children:".wait"})," to fine tune the waiting behavior. The state snapshot will be passed to the function each time the state changes and the callback should return either ",(0,o.jsx)(e.code,{children:"true"})," or ",(0,o.jsx)(e.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(e.p,{children:"In this example, the promise will resolve when the state is a number that is divisible by 5."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"await CounterState.wait(state => state % 5 === 0)\n"})}),"\n",(0,o.jsx)(l.P3,{code:i}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsx)(e.admonition,{type:"tip",children:(0,o.jsxs)(e.p,{children:["When the condition is fulfilled, the ",(0,o.jsx)(e.code,{children:".wait"})," method returns a Promise that resolves into a snapshot of the state that fulfilled the condition. This is useful when we only know what condition to expect but not a specific value, as we could capture the value right after waiting."]})})]})}function g(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(f,{...t})}):f(t)}},9235:(t,e,n)=>{n.d(e,{IG:()=>w,P3:()=>v});var o=n(4477),a=n(9047),i=n(5293),s=n(8553),r=n(5938),l=n(6540),c=n(4848);const d="index.js",h="App.tsx",u="styles.css",m="index.module.css",p=!1,f={[d]:["import { createRoot } from 'react-dom/client'","import App from './App.tsx'",`import './${u}'`,"","const root = createRoot(document.getElementById('root'))","root.render(<App />)",""].join("\n"),[u]:["body {","  font-family: sans-serif;","  -webkit-font-smoothing: auto;","  -moz-font-smoothing: auto;","  -moz-osx-font-smoothing: grayscale;","  font-smoothing: auto;","  text-rendering: optimizeLegibility;","  font-smooth: always;","  -webkit-tap-highlight-color: transparent;","  -webkit-touch-callout: none;","}"].join("\n"),"package.json":["{",`  "main": "${d}",`,'  "dependencies": {','    "react": "^18.0.0",','    "react-dom": "^18.0.0",','    "react-scripts": "^5.0.0"',"  }","}"].join("\n"),"public/index.html":["<!DOCTYPE html>",'<html lang="en">',"  <head>",'    <meta charset="UTF-8">','    <meta name="viewport" content="width=device-width, initial-scale=1.0">',"    <title>Example</title>","  </head>","  <body>",'    <div id="root"></div>',"  </body>","</html>"].join("\n")};function g(){const{colorMode:t}=(0,i.G)();return"light"===t?a.Zw:a.$o}const x={customSetup:{dependencies:{"cotton-box":"latest","cotton-box-react":"latest"}},options:{editorWidthPercentage:65,editorHeight:"45vh",showLineNumbers:!0,showRefreshButton:!0,showTabs:!1,wrapContent:!0}};function w(t){return(0,r.i)()?(0,c.jsx)(b,{...t}):null}function b(t){let{code:e,css:n,extraDependencies:a,options:i}=t;const s=g();return(0,c.jsx)(c.Fragment,{children:p?(0,c.jsx)(o.l5,{files:{...f,[h]:e,...n?{[m]:n}:{}},...x,theme:s,customSetup:{...x.customSetup,entry:d,dependencies:{...x.customSetup.dependencies,...a}},options:{...x.options,activeFile:h,showConsole:/console\./.test(e),...i},children:(0,c.jsxs)(o.am,{children:[(0,c.jsx)(S,{}),(0,c.jsx)(o.G5,{})]})}):(0,c.jsx)(o.OZ,{files:{...f,[h]:e,...n?{[m]:n}:{}},...x,theme:s,customSetup:{...x.customSetup,entry:d,dependencies:{...x.customSetup.dependencies,...a}},options:{...x.options,activeFile:h,showConsole:/console\./.test(e),...i}})})}function v(t){return(0,r.i)()?(0,c.jsx)(j,{...t}):null}function j(t){let{code:e}=t;const n=g();return(0,c.jsx)(c.Fragment,{children:p?(0,c.jsx)(o.l5,{files:{[d]:e},...x,theme:n,customSetup:{...x.customSetup,entry:d},options:{...x.options,activeFile:d},children:(0,c.jsxs)(o.am,{children:[(0,c.jsx)(S,{}),(0,c.jsx)(o.X2,{})]})}):(0,c.jsx)(o.OZ,{files:{[d]:e},...x,theme:n,customSetup:{...x.customSetup,entry:d},options:{...x.options,activeFile:d,layout:"console"}})})}function S(){const{code:t,updateCode:e}=(0,o.Pe)(),{sandpack:n}=(0,o.ny)();return(0,c.jsx)(o.aN,{children:(0,c.jsx)("div",{style:{flex:1},children:(0,c.jsx)(s.Ay,{language:"typescript",theme:"vs-dark",defaultValue:t,onChange:(0,l.useCallback)((t=>e(t||"")),[e]),options:{fontSize:14,minimap:{enabled:!1},scrollBeyondLastLine:!1,wordWrap:"on"}},n.activeFile)})})}}}]);
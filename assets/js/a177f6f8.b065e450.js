"use strict";(self.webpackChunkcotton_box_docs=self.webpackChunkcotton_box_docs||[]).push([[6081],{8503:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=n(4848),r=n(8453);const i={slug:"reincarnation-of-an-old-package",title:"Reincarnation of an old package",authors:"glyphcat",tags:["react","react-relink"],date:new Date("2024-03-31T00:00:00.000Z")},s=void 0,o={permalink:"/cotton-box/blog/reincarnation-of-an-old-package",source:"@site/blog/2024/reincarnation-of-an-old-package.md",title:"Reincarnation of an old package",description:"In 2020, react-relink was released. It was heavily inspired by recoil and had a similar API design.",date:"2024-03-31T00:00:00.000Z",tags:[{inline:!0,label:"react",permalink:"/cotton-box/blog/tags/react"},{inline:!0,label:"react-relink",permalink:"/cotton-box/blog/tags/react-relink"}],readingTime:1.375,hasTruncateMarker:!0,authors:[{name:"GlyphCat",url:"https://github.com/glyph-cat",imageURL:"https://github.com/glyph-cat.png",key:"glyphcat"}],frontMatter:{slug:"reincarnation-of-an-old-package",title:"Reincarnation of an old package",authors:"glyphcat",tags:["react","react-relink"],date:"2024-03-31T00:00:00.000Z"},unlisted:!1},c={authorsImageUrls:[void 0]},l=[];function d(e){const t={a:"a",code:"code",del:"del",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["In 2020, ",(0,a.jsx)(t.a,{href:"https://github.com/glyph-cat/react-relink",children:(0,a.jsx)(t.code,{children:"react-relink"})})," was released. It was heavily inspired by ",(0,a.jsx)(t.a,{href:"https://github.com/facebookexperimental/Recoil",children:(0,a.jsx)(t.code,{children:"recoil"})})," and had a similar API design."]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"react-relink"})," was created with the goals of:"]}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["not needing to wrap components in ",(0,a.jsx)(t.a,{href:"https://react.dev/reference/react/createContext#provider",children:"Providers"})," while still allowing states to be shared across different React components trees, and"]}),"\n",(0,a.jsxs)(t.li,{children:["make it easy to transition from ",(0,a.jsx)(t.code,{children:"recoil"})," by introducing similar concepts and APIs."]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(t.p,{children:["As time goes on, the concepts of ",(0,a.jsx)(t.code,{children:"recoil"})," were slowly disregarded, new features were added, and ",(0,a.jsx)(t.code,{children:"react-relink"})," began to evolve into a state management library of it's own."]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(t.p,{children:"At that point, there were three main problems..."}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"The codebase became bloated and difficult to maintain"}),"\n",(0,a.jsx)(t.li,{children:"It became so slow, that in some scenarios, it results in very noticeable lagging"}),"\n",(0,a.jsxs)(t.li,{children:["There was no easy way to use ",(0,a.jsx)(t.code,{children:"react-relink"})," as a state management tool outside of React because the dependencies are tied together."]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(t.p,{children:["Eventually, the better solution was to create ",(0,a.jsx)(t.del,{children:"a new package"})," two new packages \u2014\na core package and another one for its React bindings. This allows non-React projects to use this new state management library without needing to install ",(0,a.jsx)(t.a,{href:"https://www.npmjs.com/package/react",children:(0,a.jsx)(t.code,{children:"react"})})," as a dependency, and the core package is called ",(0,a.jsx)(t.code,{children:"cotton-box"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"cotton-box"})," exposes three different types of State Managers that are built on top of one another for different needs:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"SimpleStateManager"})," \u2014\xa0the most lightweight state manager"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"StateManager"})," - generic state manager with lifecycle hooks for persisting data"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"AsyncStateManager"})," - similar to ",(0,a.jsx)(t.code,{children:"StateManager"})," but supports async set-state functions"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["More information on the differences between these State Managers are available ",(0,a.jsx)(t.a,{href:"/cotton-box/docs/learn/tutorial/which-state-manager-should-i-use",children:"here"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["If you're migrating from ",(0,a.jsx)(t.code,{children:"react-relink"}),", it is highly recommended to check out the ",(0,a.jsx)(t.a,{href:"/cotton-box/docs/learn/react/migration-from-react-relink",children:"migration guide"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);
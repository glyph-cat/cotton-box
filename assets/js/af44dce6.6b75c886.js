"use strict";(self.webpackChunkcotton_box_docs=self.webpackChunkcotton_box_docs||[]).push([[560],{4749:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var o=n(4848),s=n(8453),a=n(3357),r=n(9235);const i={sidebar_position:5},c="Opt Out of Re-renders Due To State Change",l={id:"learn/react/opt-out-of-rerenders",title:"Opt Out of Re-renders Due To State Change",description:"Occasionally, we might want to opt out of watching the state. This can be done by passing a third parameter. If we do not need to use a selector, we can pass null as the second parameter.",source:"@site/docs/learn/react/opt-out-of-rerenders.mdx",sourceDirName:"learn/react",slug:"/learn/react/opt-out-of-rerenders",permalink:"/cotton-box/docs/learn/react/opt-out-of-rerenders",draft:!1,unlisted:!1,editUrl:"https://github.com/glyph-cat/cotton-box/tree/main/packages/docs/docs/learn/react/opt-out-of-rerenders.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"learnSidebar",previous:{title:"Observing Initialization State",permalink:"/cotton-box/docs/learn/react/observing-initialization-state"},next:{title:"Hiding values from React Developer Tools",permalink:"/cotton-box/docs/learn/react/hiding-values-from-react-developer-tools"}},u={},d=[{value:"Full Example",id:"full-example",level:2}];function p(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"opt-out-of-re-renders-due-to-state-change",children:"Opt Out of Re-renders Due To State Change"}),"\n",(0,o.jsxs)(t.p,{children:["Occasionally, we might want to opt out of watching the state. This can be done by passing a third parameter. If we do not need to use a selector, we can pass ",(0,o.jsx)(t.code,{children:"null"})," as the second parameter."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import { useState } from 'react'\nimport { useStateValue } from '{:REACT_PACKAGE_NAME:}'\n\nfunction App(): JSX.Element {\n  const [active, setActive] = useState(true)\n  const state = useStateValue(ExampleState, null, active)\n  return '...'\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["The third parameter is a ",(0,o.jsx)(t.code,{children:"boolean"})," flag that defaults to ",(0,o.jsx)(t.code,{children:"true"}),". When set to ",(0,o.jsx)(t.code,{children:"true"}),", the hook will observe state changes normally, when set to ",(0,o.jsx)(t.code,{children:"false"}),", it will stop watching for state changes until it is set back to ",(0,o.jsx)(t.code,{children:"true"})," again."]}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["Setting the third parameter to ",(0,o.jsx)(t.code,{children:"false"})," does not prevent the State Manager itself from changing state, but rather, it is just blocking the hook from watching for state changes."]})}),"\n",(0,o.jsx)(t.h2,{id:"full-example",children:"Full Example"}),"\n",(0,o.jsx)(r.IG,{code:a.A})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},9235:(e,t,n)=>{n.d(t,{IG:()=>b,P3:()=>v});var o=n(4477),s=n(9047),a=n(5293),r=n(8553),i=n(5938),c=n(6540),l=n(4848);const u="index.js",d="App.tsx",p="styles.css",h="index.module.css",m=!1,f={[u]:["import { createRoot } from 'react-dom/client'","import App from './App.tsx'",`import './${p}'`,"","const root = createRoot(document.getElementById('root'))","root.render(<App />)",""].join("\n"),[p]:["body {","  font-family: sans-serif;","  -webkit-font-smoothing: auto;","  -moz-font-smoothing: auto;","  -moz-osx-font-smoothing: grayscale;","  font-smoothing: auto;","  text-rendering: optimizeLegibility;","  font-smooth: always;","  -webkit-tap-highlight-color: transparent;","  -webkit-touch-callout: none;","}"].join("\n"),"package.json":["{",`  "main": "${u}",`,'  "dependencies": {','    "react": "^18.0.0",','    "react-dom": "^18.0.0",','    "react-scripts": "^5.0.0"',"  }","}"].join("\n"),"public/index.html":["<!DOCTYPE html>",'<html lang="en">',"  <head>",'    <meta charset="UTF-8">','    <meta name="viewport" content="width=device-width, initial-scale=1.0">',"    <title>Example</title>","  </head>","  <body>",'    <div id="root"></div>',"  </body>","</html>"].join("\n")};function g(){const{colorMode:e}=(0,a.G)();return"light"===e?s.Zw:s.$o}const x={customSetup:{dependencies:{"cotton-box":"latest","cotton-box-react":"latest"}},options:{editorWidthPercentage:65,editorHeight:"45vh",showLineNumbers:!0,showRefreshButton:!0,showTabs:!1,wrapContent:!0}};function b(e){return(0,i.i)()?(0,l.jsx)(j,{...e}):null}function j(e){let{code:t,css:n,extraDependencies:s,options:a}=e;const r=g();return(0,l.jsx)(l.Fragment,{children:m?(0,l.jsx)(o.l5,{files:{...f,[d]:t,...n?{[h]:n}:{}},...x,theme:r,customSetup:{...x.customSetup,entry:u,dependencies:{...x.customSetup.dependencies,...s}},options:{...x.options,activeFile:d,showConsole:/console\./.test(t),...a},children:(0,l.jsxs)(o.am,{children:[(0,l.jsx)(w,{}),(0,l.jsx)(o.G5,{})]})}):(0,l.jsx)(o.OZ,{files:{...f,[d]:t,...n?{[h]:n}:{}},...x,theme:r,customSetup:{...x.customSetup,entry:u,dependencies:{...x.customSetup.dependencies,...s}},options:{...x.options,activeFile:d,showConsole:/console\./.test(t),...a}})})}function v(e){return(0,i.i)()?(0,l.jsx)(S,{...e}):null}function S(e){let{code:t}=e;const n=g();return(0,l.jsx)(l.Fragment,{children:m?(0,l.jsx)(o.l5,{files:{[u]:t},...x,theme:n,customSetup:{...x.customSetup,entry:u},options:{...x.options,activeFile:u},children:(0,l.jsxs)(o.am,{children:[(0,l.jsx)(w,{}),(0,l.jsx)(o.X2,{})]})}):(0,l.jsx)(o.OZ,{files:{[u]:t},...x,theme:n,customSetup:{...x.customSetup,entry:u},options:{...x.options,activeFile:u,layout:"console"}})})}function w(){const{code:e,updateCode:t}=(0,o.Pe)(),{sandpack:n}=(0,o.ny)();return(0,l.jsx)(o.aN,{children:(0,l.jsx)("div",{style:{flex:1},children:(0,l.jsx)(r.Ay,{language:"typescript",theme:"vs-dark",defaultValue:e,onChange:(0,c.useCallback)((e=>t(e||"")),[t]),options:{fontSize:14,minimap:{enabled:!1},scrollBeyondLastLine:!1,wordWrap:"on"}},n.activeFile)})})}},3357:(e,t,n)=>{n.d(t,{A:()=>o});const o="import { StateManager } from 'cotton-box'\nimport { useStateValue } from 'cotton-box-react'\nimport { useCallback, useState } from 'react'\n\nexport default function App(): JSX.Element {\n  const [active, setActive] = useState(true)\n  const toggleActiveness = useCallback(() => { setActive(a => !a) }, [])\n  const user = useStateValue(UserState, null, active)\n  console.log('App is rendering...')\n  return (\n    <div>\n      <h1>Hello, {user.firstName} {user.lastName}!</h1>\n      <h2>Your lucky number is {user.luckyNumber ?? '...'}</h2>\n      <button onClick={rollLuckyNumber}>Roll lucky number</button>\n      <button onClick={toggleActiveness}>\n        {active ? 'Pause watching' : 'Start watching'}\n      </button>\n    </div>\n  )\n}\n\ninterface IUserState {\n  firstName: string\n  lastName: string\n  luckyNumber: number\n}\n\nconst UserState = new StateManager<IUserState>({\n  firstName: 'John',\n  lastName: 'Smith',\n  luckyNumber: null,\n})\n\nfunction rollLuckyNumber(): void {\n  UserState.set((previousState) => ({\n    ...previousState,\n    luckyNumber: Math.round(Math.random() * 100),\n  }))\n}\n"}}]);
"use strict";(self.webpackChunkcotton_box_docs=self.webpackChunkcotton_box_docs||[]).push([[1873],{471:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"reincarnation-of-an-old-package","metadata":{"permalink":"/cotton-box/blog/reincarnation-of-an-old-package","source":"@site/blog/2024/reincarnation-of-an-old-package.md","title":"Reincarnation of an old package","description":"In 2020, react-relink was released. It was heavily inspired by recoil and had a similar API design.","date":"2024-03-31T00:00:00.000Z","tags":[{"inline":true,"label":"react","permalink":"/cotton-box/blog/tags/react"},{"inline":true,"label":"react-relink","permalink":"/cotton-box/blog/tags/react-relink"}],"readingTime":1.375,"hasTruncateMarker":true,"authors":[{"name":"GlyphCat","url":"https://github.com/glyph-cat","imageURL":"https://github.com/glyph-cat.png","key":"glyphcat"}],"frontMatter":{"slug":"reincarnation-of-an-old-package","title":"Reincarnation of an old package","authors":"glyphcat","tags":["react","react-relink"],"date":"2024-03-31T00:00:00.000Z"},"unlisted":false},"content":"In 2020, [`react-relink`](https://github.com/glyph-cat/react-relink) was released. It was heavily inspired by [`recoil`](https://github.com/facebookexperimental/Recoil) and had a similar API design.\\n\\n<br/>\\n\\n`react-relink` was created with the goals of:\\n\\n1. not needing to wrap components in [Providers](https://react.dev/reference/react/createContext#provider) while still allowing states to be shared across different React components trees, and\\n2. make it easy to transition from `recoil` by introducing similar concepts and APIs.\\n\\n<br/>\\n\\nAs time goes on, the concepts of `recoil` were slowly disregarded, new features were added, and `react-relink` began to evolve into a state management library of it\'s own.\\n\\n<br/>\\n\\nAt that point, there were three main problems...\\n\x3c!-- truncate --\x3e\\n- The codebase became bloated and difficult to maintain\\n- It became so slow, that in some scenarios, it results in very noticeable lagging\\n- There was no easy way to use `react-relink` as a state management tool outside of React because the dependencies are tied together.\\n\\n<br/>\\n\\nEventually, the better solution was to create ~~a new package~~ two new packages \u2014\\na core package and another one for its React bindings. This allows non-React projects to use this new state management library without needing to install [`react`](https://www.npmjs.com/package/react) as a dependency, and the core package is called `cotton-box`.\\n\\n`cotton-box` exposes three different types of State Managers that are built on top of one another for different needs:\\n- `SimpleStateManager` \u2014\xa0the most lightweight state manager\\n- `StateManager` - generic state manager with lifecycle hooks for persisting data\\n- `AsyncStateManager` - similar to `StateManager` but supports async set-state functions\\n\\nMore information on the differences between these State Managers are available [here](/cotton-box/docs/learn/tutorial/which-state-manager-should-i-use).\\n\\nIf you\'re migrating from `react-relink`, it is highly recommended to check out the [migration guide](/cotton-box/docs/learn/react/migration-from-react-relink)."}]}}')}}]);
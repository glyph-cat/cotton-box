"use strict";(self.webpackChunkcotton_box_docs=self.webpackChunkcotton_box_docs||[]).push([[9075],{5046:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"learnSidebar":[{"type":"category","label":"Tutorial","items":[{"type":"link","label":"Setup","href":"/cotton-box/docs/learn/tutorial/setup","docId":"learn/tutorial/setup","unlisted":false},{"type":"link","label":"Quick Start","href":"/cotton-box/docs/learn/tutorial/quick-start","docId":"learn/tutorial/quick-start","unlisted":false},{"type":"link","label":"Watching For State Changes","href":"/cotton-box/docs/learn/tutorial/watching-for-state-changes","docId":"learn/tutorial/watching-for-state-changes","unlisted":false},{"type":"link","label":"Waiting For State Change","href":"/cotton-box/docs/learn/tutorial/waiting-for-state-change","docId":"learn/tutorial/waiting-for-state-change","unlisted":false},{"type":"link","label":"Disposal","href":"/cotton-box/docs/learn/tutorial/disposal","docId":"learn/tutorial/disposal","unlisted":false},{"type":"link","label":"Persisting State","href":"/cotton-box/docs/learn/tutorial/persisting-state","docId":"learn/tutorial/persisting-state","unlisted":false},{"type":"link","label":"Which State Manager Should I Use?","href":"/cotton-box/docs/learn/tutorial/which-state-manager-should-i-use","docId":"learn/tutorial/which-state-manager-should-i-use","unlisted":false}],"collapsed":false,"collapsible":true,"href":"/cotton-box/docs/learn/tutorial"},{"type":"category","label":"Using with React","items":[{"type":"link","label":"Setup","href":"/cotton-box/docs/learn/react/setup","docId":"learn/react/setup","unlisted":false},{"type":"link","label":"Quick Start","href":"/cotton-box/docs/learn/react/quick-start","docId":"learn/react/quick-start","unlisted":false},{"type":"link","label":"Selectors","href":"/cotton-box/docs/learn/react/selectors","docId":"learn/react/selectors","unlisted":false},{"type":"link","label":"Observing Initialization State","href":"/cotton-box/docs/learn/react/observing-initialization-state","docId":"learn/react/observing-initialization-state","unlisted":false},{"type":"link","label":"Opt Out of Re-renders Due To State Change","href":"/cotton-box/docs/learn/react/opt-out-of-rerenders","docId":"learn/react/opt-out-of-rerenders","unlisted":false},{"type":"link","label":"Hiding values from React Developer Tools","href":"/cotton-box/docs/learn/react/hiding-values-from-react-developer-tools","docId":"learn/react/hiding-values-from-react-developer-tools","unlisted":false},{"type":"link","label":"Migration From react-relink","href":"/cotton-box/docs/learn/react/migration-from-react-relink","docId":"learn/react/migration-from-react-relink","unlisted":false}],"collapsed":false,"collapsible":true,"href":"/cotton-box/docs/learn/react"}],"apiSidebar":[{"type":"category","label":"Core","items":[{"type":"link","label":"SimpleStateManager","href":"/cotton-box/docs/api/core/SimpleStateManager","docId":"api/core/SimpleStateManager","unlisted":false},{"type":"link","label":"StateManager","href":"/cotton-box/docs/api/core/StateManager","docId":"api/core/StateManager","unlisted":false},{"type":"link","label":"AsyncStateManager","href":"/cotton-box/docs/api/core/AsyncStateManager","docId":"api/core/AsyncStateManager","unlisted":false},{"type":"link","label":"ReadOnlyStateManager","href":"/cotton-box/docs/api/core/ReadOnlyStateManager","docId":"api/core/ReadOnlyStateManager","unlisted":false},{"type":"link","label":"SimpleStateManagerOptions","href":"/cotton-box/docs/api/core/SimpleStateManagerOptions","docId":"api/core/SimpleStateManagerOptions","unlisted":false},{"type":"link","label":"StateManagerOptions","href":"/cotton-box/docs/api/core/StateManagerOptions","docId":"api/core/StateManagerOptions","unlisted":false},{"type":"link","label":"StateManagerLifecycle","href":"/cotton-box/docs/api/core/StateManagerLifecycle","docId":"api/core/StateManagerLifecycle","unlisted":false},{"type":"link","label":"StateManagerInitArgs","href":"/cotton-box/docs/api/core/StateManagerInitArgs","docId":"api/core/StateManagerInitArgs","unlisted":false},{"type":"link","label":"StateManagerDidSetArgs","href":"/cotton-box/docs/api/core/StateManagerDidSetArgs","docId":"api/core/StateManagerDidSetArgs","unlisted":false},{"type":"link","label":"StateManagerVisibility","href":"/cotton-box/docs/api/core/StateManagerVisibility","docId":"api/core/StateManagerVisibility","unlisted":false},{"type":"link","label":"SetStateFn","href":"/cotton-box/docs/api/core/SetStateFn","docId":"api/core/SetStateFn","unlisted":false},{"type":"link","label":"AsyncSetStateFn","href":"/cotton-box/docs/api/core/AsyncSetStateFn","docId":"api/core/AsyncSetStateFn","unlisted":false},{"type":"link","label":"StateSelector","href":"/cotton-box/docs/api/core/StateSelector","docId":"api/core/StateSelector","unlisted":false},{"type":"link","label":"WaitEvaluator","href":"/cotton-box/docs/api/core/WaitEvaluator","docId":"api/core/WaitEvaluator","unlisted":false},{"type":"link","label":"StateChangeEventType","href":"/cotton-box/docs/api/core/StateChangeEventType","docId":"api/core/StateChangeEventType","unlisted":false},{"type":"link","label":"EqualityFn","href":"/cotton-box/docs/api/core/EqualityFn","docId":"api/core/EqualityFn","unlisted":false},{"type":"link","label":"Equality","href":"/cotton-box/docs/api/core/Equality","docId":"api/core/Equality","unlisted":false}],"collapsed":false,"collapsible":true,"href":"/cotton-box/docs/api/core"},{"type":"category","label":"React","items":[{"type":"link","label":"useSimpleStateValue","href":"/cotton-box/docs/api/react/useSimpleStateValue","docId":"api/react/useSimpleStateValue","unlisted":false},{"type":"link","label":"useStateValue","href":"/cotton-box/docs/api/react/useStateValue","docId":"api/react/useStateValue","unlisted":false},{"type":"link","label":"useScoped","href":"/cotton-box/docs/api/react/useScoped","docId":"api/react/useScoped","unlisted":false},{"type":"link","label":"StateManagerScopeProvider","href":"/cotton-box/docs/api/react/StateManagerScopeProvider","docId":"api/react/StateManagerScopeProvider","unlisted":false},{"type":"link","label":"StateManagerScopeProviderProps","href":"/cotton-box/docs/api/react/StateManagerScopeProviderProps","docId":"api/react/StateManagerScopeProviderProps","unlisted":false},{"type":"link","label":"useSimpleStateValueWithReactiveSelector","href":"/cotton-box/docs/api/react/useSimpleStateValueWithReactiveSelector","docId":"api/react/useSimpleStateValueWithReactiveSelector","unlisted":false},{"type":"link","label":"useStateValueWithReactiveSelector","href":"/cotton-box/docs/api/react/useStateValueWithReactiveSelector","docId":"api/react/useStateValueWithReactiveSelector","unlisted":false}],"collapsed":false,"collapsible":true,"href":"/cotton-box/docs/api/react"},{"type":"category","label":"Miscellaneous","items":[{"type":"link","label":"VERSION","href":"/cotton-box/docs/api/misc/VERSION","docId":"api/misc/VERSION","unlisted":false},{"type":"link","label":"BUILD_HASH","href":"/cotton-box/docs/api/misc/BUILD_HASH","docId":"api/misc/BUILD_HASH","unlisted":false},{"type":"link","label":"BUILD_TYPE","href":"/cotton-box/docs/api/misc/BUILD_TYPE","docId":"api/misc/BUILD_TYPE","unlisted":false},{"type":"link","label":"BuildType","href":"/cotton-box/docs/api/misc/BuildType","docId":"api/misc/BuildType","unlisted":false}],"collapsed":false,"collapsible":true,"href":"/cotton-box/docs/api/misc"}]},"docs":{"api/core/AsyncSetStateFn":{"id":"api/core/AsyncSetStateFn","title":"AsyncSetStateFn","description":"Overview","sidebar":"apiSidebar"},"api/core/AsyncStateManager":{"id":"api/core/AsyncStateManager","title":"AsyncStateManager","description":"Overview","sidebar":"apiSidebar"},"api/core/Equality":{"id":"api/core/Equality","title":"Equality","description":"Overview","sidebar":"apiSidebar"},"api/core/EqualityFn":{"id":"api/core/EqualityFn","title":"EqualityFn","description":"{DataType.Function}","sidebar":"apiSidebar"},"api/core/ReadOnlyStateManager":{"id":"api/core/ReadOnlyStateManager","title":"ReadOnlyStateManager","description":"Overview","sidebar":"apiSidebar"},"api/core/SetStateFn":{"id":"api/core/SetStateFn","title":"SetStateFn","description":"Overview","sidebar":"apiSidebar"},"api/core/SimpleStateManager":{"id":"api/core/SimpleStateManager","title":"SimpleStateManager","description":"Overview","sidebar":"apiSidebar"},"api/core/SimpleStateManagerOptions":{"id":"api/core/SimpleStateManagerOptions","title":"SimpleStateManagerOptions","description":"Overview","sidebar":"apiSidebar"},"api/core/StateChangeEventType":{"id":"api/core/StateChangeEventType","title":"StateChangeEventType","description":"Overview","sidebar":"apiSidebar"},"api/core/StateManager":{"id":"api/core/StateManager","title":"StateManager","description":"{/ Construction formula for this article: Copy everything to SimpleStateManager, change signature, change options param for constructor, then add a section for init and mention which properties and methods are inherited /}","sidebar":"apiSidebar"},"api/core/StateManagerDidSetArgs":{"id":"api/core/StateManagerDidSetArgs","title":"StateManagerDidSetArgs","description":"Overview","sidebar":"apiSidebar"},"api/core/StateManagerInitArgs":{"id":"api/core/StateManagerInitArgs","title":"StateManagerInitArgs","description":"Overview","sidebar":"apiSidebar"},"api/core/StateManagerLifecycle":{"id":"api/core/StateManagerLifecycle","title":"StateManagerLifecycle","description":"Overview","sidebar":"apiSidebar"},"api/core/StateManagerOptions":{"id":"api/core/StateManagerOptions","title":"StateManagerOptions","description":"Overview","sidebar":"apiSidebar"},"api/core/StateManagerVisibility":{"id":"api/core/StateManagerVisibility","title":"StateManagerVisibility","description":"Overview","sidebar":"apiSidebar"},"api/core/StateSelector":{"id":"api/core/StateSelector","title":"StateSelector","description":"Overview","sidebar":"apiSidebar"},"api/core/WaitEvaluator":{"id":"api/core/WaitEvaluator","title":"WaitEvaluator","description":"Overview","sidebar":"apiSidebar"},"api/misc/BUILD_HASH":{"id":"api/misc/BUILD_HASH","title":"BUILD_HASH","description":"{DataType.string}","sidebar":"apiSidebar"},"api/misc/BUILD_TYPE":{"id":"api/misc/BUILD_TYPE","title":"BUILD_TYPE","description":"{DataType.BuildType}","sidebar":"apiSidebar"},"api/misc/BuildType":{"id":"api/misc/BuildType","title":"BuildType","description":"{DataType.enum}","sidebar":"apiSidebar"},"api/misc/VERSION":{"id":"api/misc/VERSION","title":"VERSION","description":"{DataType.string}","sidebar":"apiSidebar"},"api/react/StateManagerScopeProvider":{"id":"api/react/StateManagerScopeProvider","title":"StateManagerScopeProvider","description":"Overview","sidebar":"apiSidebar"},"api/react/StateManagerScopeProviderProps":{"id":"api/react/StateManagerScopeProviderProps","title":"StateManagerScopeProviderProps","description":"Overview","sidebar":"apiSidebar"},"api/react/useScoped":{"id":"api/react/useScoped","title":"useScoped","description":"Overview","sidebar":"apiSidebar"},"api/react/useSimpleStateValue":{"id":"api/react/useSimpleStateValue","title":"useSimpleStateValue","description":"Overview","sidebar":"apiSidebar"},"api/react/useSimpleStateValueWithReactiveSelector":{"id":"api/react/useSimpleStateValueWithReactiveSelector","title":"useSimpleStateValueWithReactiveSelector","description":"This is provided as an escape hatch in special cases where useSimpleStateValue is not behaving as expected. For example, the selector depends on external values (props or data from other hooks) and the returned value does not change when those dependencies change. Under normal circumstances, the returned value will change when those external values change and this hook is not needed.","sidebar":"apiSidebar"},"api/react/useStateValue":{"id":"api/react/useStateValue","title":"useStateValue","description":"Overview","sidebar":"apiSidebar"},"api/react/useStateValueWithReactiveSelector":{"id":"api/react/useStateValueWithReactiveSelector","title":"useStateValueWithReactiveSelector","description":"This is provided as an escape hatch in special cases where useStateValue is not behaving as expected. For example, the selector depends on external values (props or data from other hooks) and the returned value does not change when those dependencies change. Under normal circumstances, the returned value will change when those external values change and this hook is not needed.","sidebar":"apiSidebar"},"learn/react/hiding-values-from-react-developer-tools":{"id":"learn/react/hiding-values-from-react-developer-tools","title":"Hiding values from React Developer Tools","description":"By default, useStateValue and useStateValueWithReactiveSelector only exposes the state value to the React Developer Tools in non-production environments and hides it in production environment.","sidebar":"learnSidebar"},"learn/react/migration-from-react-relink":{"id":"learn/react/migration-from-react-relink","title":"Migration From react-relink","description":"{/ NOTE: sidebar position is not specified, this should be the last article in the sidebar. /}","sidebar":"learnSidebar"},"learn/react/observing-initialization-state":{"id":"learn/react/observing-initialization-state","title":"Observing Initialization State","description":"To determine if a state is initializing, we can use the .isInitializing property. It is a  ReadOnlyStateManager where only the .get, .watch and .wait methods are available.","sidebar":"learnSidebar"},"learn/react/opt-out-of-rerenders":{"id":"learn/react/opt-out-of-rerenders","title":"Opt Out of Re-renders Due To State Change","description":"Occasionally, we might want to opt out of watching the state. This can be done by passing a third parameter. If we do not need to use a selector, we can pass null as the second parameter.","sidebar":"learnSidebar"},"learn/react/quick-start":{"id":"learn/react/quick-start","title":"Quick Start","description":"Let\'s begin by importing useStateValue from \'cotton-box-react\'.","sidebar":"learnSidebar"},"learn/react/selectors":{"id":"learn/react/selectors","title":"Selectors","description":"Sometimes, our state might be an object and we only need to the value of certain properties from that object, but when any property is changed, the entire object changes, resulting in components to re-render. This is when selectors can help us overcome this problem.","sidebar":"learnSidebar"},"learn/react/setup":{"id":"learn/react/setup","title":"Setup","description":"The minimum required version of React for cotton-box to work is 18.","sidebar":"learnSidebar"},"learn/tutorial/disposal":{"id":"learn/tutorial/disposal","title":"Disposal","description":"General Usage","sidebar":"learnSidebar"},"learn/tutorial/persisting-state":{"id":"learn/tutorial/persisting-state","title":"Persisting State","description":"StateManager and AsyncStateManager provides three lifecycle hooks:","sidebar":"learnSidebar"},"learn/tutorial/quick-start":{"id":"learn/tutorial/quick-start","title":"Quick Start","description":"Creating a new State Manager","sidebar":"learnSidebar"},"learn/tutorial/setup":{"id":"learn/tutorial/setup","title":"Setup","description":"Installation","sidebar":"learnSidebar"},"learn/tutorial/waiting-for-state-change":{"id":"learn/tutorial/waiting-for-state-change","title":"Waiting For State Change","description":"Waiting is an observation strategy that utilizes .watch under the hood. It allows us to watch for state value changes until it matches a certain value or fulfils a certain condition then stops watching and returns a snapshot of that state.","sidebar":"learnSidebar"},"learn/tutorial/watching-for-state-changes":{"id":"learn/tutorial/watching-for-state-changes","title":"Watching For State Changes","description":"We can create a watcher to observe state changes with the .watch method.","sidebar":"learnSidebar"},"learn/tutorial/which-state-manager-should-i-use":{"id":"learn/tutorial/which-state-manager-should-i-use","title":"Which State Manager Should I Use?","description":"The package comes with three types of State Managers, each with slightly different characteristics, tailored for different use cases.","sidebar":"learnSidebar"}}}}')}}]);